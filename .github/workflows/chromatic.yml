# # NOTE: uncomment the whole file
# # if you want to use chromatic

# name: "Chromatic"

# # Event for the workflow
# on:
#   pull_request:
#     branches:
#       - "dev"

# # List of jobs
# jobs:
#   chromatic-deployment:
#     # Operating System
#     runs-on: ${{ matrix.os }}

#     strategy:
#       matrix:
#         os: [ubuntu-latest]
#         node: [14]

#     # Job steps
#     steps:
#       - name: Checkout 🛎
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0

#       - name: Setup node env 🏗
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node }}
#           check-latest: true

#       - name: Get yarn cache directory path 🛠
#         id: yarn-cache-dir-path
#         run: echo "::set-output name=dir::$(yarn cache dir)"

#       - name: Cache node_modules 📦
#         uses: actions/cache@v3.0.2
#         id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
#         with:
#           path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-
#       - name: Install dependencies 👨🏻‍💻
#         run: |
#           yarn --prefer-offline --no-audit
#           yarn add typescript
#           yarn test:generate-output
#         # 👇 Adds Chromatic as a step in the workflow
#       - name: Publish to Chromatic
#         uses: chromaui/action@v1
#         # Chromatic GitHub Action options
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}
#           # 👇 Chromatic projectToken, refer to the manage page to obtain it.
#           projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
